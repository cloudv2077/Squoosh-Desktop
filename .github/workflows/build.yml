name: 🚀 Cross-Platform Build & Release

on:
  workflow_dispatch:
  push:
    tags: ['v*']

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            name: Linux
          - os: windows-latest
            platform: windows
            name: Windows
          - os: macos-latest
            platform: mac
            name: macOS
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Install Dependencies
        run: npm install
        
      - name: 🏗️ Prepare Build
        run: npm run prebuild
        
      - name: 🔨 Build for ${{ matrix.name }}
        run: npx electron-builder --${{ matrix.platform }} --publish=never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 📋 Show Build Results
        shell: bash
        run: |
          echo "=== Build completed for ${{ matrix.name }} ==="
          find dist/ -type f -name "*.exe" -o -name "*.dmg" -o -name "*.AppImage" 2>/dev/null || echo "No installer files found"
          ls -la dist/ 2>/dev/null || echo "No dist directory"
          
      - name: 📤 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: squoosh-desktop-${{ matrix.platform }}
          path: dist/
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: 📥 Checkout for Release Notes
        uses: actions/checkout@v4
        
      - name: 📥 Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          
      - name: 📋 List Downloaded Files
        run: |
          echo "=== Downloaded Artifacts Structure ==="
          find ./artifacts -type f | head -20
          echo "=== Installer Files Only ==="
          find ./artifacts -type f \( -name "*Setup*.exe" -o -name "*.dmg" -o -name "*.AppImage" \)
          
      - name: 🧹 Organize Release Files
        run: |
          mkdir -p ./release-files
          echo "=== Moving installer files to release directory ==="
          
          # Move Windows installers (only Setup files, not elevate.exe or temp files)
          find ./artifacts -name "*Setup*.exe" -exec cp {} ./release-files/ \;
          
          # Move macOS installers  
          find ./artifacts -name "*.dmg" -exec cp {} ./release-files/ \;
          
          # Move Linux installers
          find ./artifacts -name "*.AppImage" -exec cp {} ./release-files/ \;
          
          echo "=== Final release files ==="
          ls -la ./release-files/
          
      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./release-files/*
          name: "Squoosh Desktop ${{ github.ref_name }}"
          body: |
            🎉 **Squoosh Desktop ${{ github.ref_name }}**
            
            📦 **下载对应平台的安装包:**
            
            - 🪟 **Windows**: `*Setup*x64.exe` (64位) / `*Setup*ia32.exe` (32位)  
            - 🍎 **macOS**: `*.dmg` (Intel) / `*arm64.dmg` (Apple Silicon)
            - 🐧 **Linux**: `*.AppImage` (x64) / `*arm64.AppImage` (ARM64)
            
            ✨ **主要功能:**
            - 智能启动系统 - 自动检测Electron，优雅降级到浏览器
            - 跨平台支持 - Windows、macOS、Linux全覆盖
            - 零外部依赖 - 纯Node.js实现
            - 多架构支持 - x64、ARM64、ia32原生支持
            
            🚀 **使用方法:** 下载对应平台安装包 → 安装 → 启动即可使用完整的图片压缩功能
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
